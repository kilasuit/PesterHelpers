<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="408" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2016-07-20" time="19:31:41">
  <environment user="Ryan" machine-name="LENOVO-10" cwd="GitHub:\PowerShellModules\PesterHelpers" user-domain="LENOVO-10" platform="Microsoft Windows 10 Pro|C:\WINDOWS|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="10.0.14393" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-GB" current-uiculture="en-US" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Success" success="True" time="27.4671" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Testing Private Function  - Get-CommonParameter for Standard Processing" executed="True" result="Success" success="True" time="2.0642" asserts="0" description="Testing Private Function  - Get-CommonParameter for Standard Processing">
        <results>
          <test-case description="Is valid Powershell (Has no script errors)" name="Testing Private Function  - Get-CommonParameter for Standard Processing.Is valid Powershell (Has no script errors)" time="0.1709" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0597" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0502" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0423" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.048" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0537" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0589" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.049" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0441" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0513" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0372" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0356" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0471" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0468" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.055" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0399" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0464" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.051" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" time="0.047" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0586" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0454" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0389" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0327" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0541" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0484" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0508" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing Private Function  - Get-CommonParameter for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.048" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Get-CommonParameter Tests" executed="True" result="Success" success="True" time="0.2501" asserts="0" description="Get-CommonParameter Tests">
        <results>
          <test-case description="Function Get-CommonParameter Has show-help comment block" name="Get-CommonParameter Tests.Function Get-CommonParameter Has show-help comment block" time="0.1335" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Get-CommonParameter Has show-help comment block has a.SYNOPSIS" name="Get-CommonParameter Tests.Function Get-CommonParameter Has show-help comment block has a.SYNOPSIS" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Get-CommonParameter Has show-help comment block has an example" name="Get-CommonParameter Tests.Function Get-CommonParameter Has show-help comment block has an example" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Get-CommonParameter Is an advanced function" name="Get-CommonParameter Tests.Function Get-CommonParameter Is an advanced function" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing" executed="True" result="Success" success="True" time="2.0129" asserts="0" description="Testing Public Function  - Export-AllModuleFunction for Standard Processing">
        <results>
          <test-case description="Is valid Powershell (Has no script errors)" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.Is valid Powershell (Has no script errors)" time="0.0838" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.057" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0438" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0401" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.042" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0491" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0573" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0555" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.051" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0486" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0452" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0498" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0501" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0386" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0574" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0528" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0565" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.052" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0362" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0508" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0504" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.048" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing Public Function  - Export-AllModuleFunction for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Export-AllModuleFunction Tests" executed="True" result="Success" success="True" time="0.9423" asserts="0" description="Export-AllModuleFunction Tests">
        <results>
          <test-case description="Has a Parameter called Module" name="Export-AllModuleFunction Tests.Has a Parameter called Module" time="0.1396" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Module Parameter is Identified as Mandatory being True" name="Export-AllModuleFunction Tests.Module Parameter is Identified as Mandatory being True" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Module Parameter is of String Type" name="Export-AllModuleFunction Tests.Module Parameter is of String Type" time="0.0295" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Module Parameter is member of ParameterSets" name="Export-AllModuleFunction Tests.Module Parameter is member of ParameterSets" time="0.0435" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Module Parameter Position is defined correctly" name="Export-AllModuleFunction Tests.Module Parameter Position is defined correctly" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Module Parameter Accept Pipeline Input?" name="Export-AllModuleFunction Tests.Does Module Parameter Accept Pipeline Input?" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Module Parameter Accept Pipeline Input by PropertyName?" name="Export-AllModuleFunction Tests.Does Module Parameter Accept Pipeline Input by PropertyName?" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Module Parameter use advanced parameter Validation? " name="Export-AllModuleFunction Tests.Does Module Parameter use advanced parameter Validation? " time="0.0395" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for Module " name="Export-AllModuleFunction Tests.Has Parameter Help Text for Module " time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called OutPath" name="Export-AllModuleFunction Tests.Has a Parameter called OutPath" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is Identified as Mandatory being True" name="Export-AllModuleFunction Tests.OutPath Parameter is Identified as Mandatory being True" time="0.0366" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is of String Type" name="Export-AllModuleFunction Tests.OutPath Parameter is of String Type" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is member of ParameterSets" name="Export-AllModuleFunction Tests.OutPath Parameter is member of ParameterSets" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter Position is defined correctly" name="Export-AllModuleFunction Tests.OutPath Parameter Position is defined correctly" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input?" name="Export-AllModuleFunction Tests.Does OutPath Parameter Accept Pipeline Input?" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input by PropertyName?" name="Export-AllModuleFunction Tests.Does OutPath Parameter Accept Pipeline Input by PropertyName?" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter use advanced parameter Validation? " name="Export-AllModuleFunction Tests.Does OutPath Parameter use advanced parameter Validation? " time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for OutPath " name="Export-AllModuleFunction Tests.Has Parameter Help Text for OutPath " time="0.0295" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-AllModuleFunction Has show-help comment block" name="Export-AllModuleFunction Tests.Function Export-AllModuleFunction Has show-help comment block" time="0.0892" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-AllModuleFunction Has show-help comment block has a.SYNOPSIS" name="Export-AllModuleFunction Tests.Function Export-AllModuleFunction Has show-help comment block has a.SYNOPSIS" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-AllModuleFunction Has show-help comment block has an example" name="Export-AllModuleFunction Tests.Function Export-AllModuleFunction Has show-help comment block has an example" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-AllModuleFunction Is an advanced function" name="Export-AllModuleFunction Tests.Function Export-AllModuleFunction Is an advanced function" time="0.0316" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing Public Function  - Export-Function for Standard Processing" executed="True" result="Success" success="True" time="3.0418" asserts="0" description="Testing Public Function  - Export-Function for Standard Processing">
        <results>
          <test-case description="Is valid Powershell (Has no script errors)" name="Testing Public Function  - Export-Function for Standard Processing.Is valid Powershell (Has no script errors)" time="0.0857" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0466" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0507" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0392" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0405" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0616" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.5443" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0526" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0535" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0508" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0467" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0525" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0548" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.049" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0425" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.5543" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" time="0.051" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.05" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0521" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0402" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing Public Function  - Export-Function for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0521" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Export-Function" executed="True" result="Success" success="True" time="0.5408" asserts="0" description="Export-Function">
        <results>
          <test-case description="Passes the Functional Mock" name="Export-Function.Passes the Functional Mock" time="0.1514" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Calls New-FunctionPesterTest" name="Export-Function.Calls New-FunctionPesterTest" time="0.0482" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Creates the required Objects" name="Export-Function.Creates the required Objects" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Creates the New-FunctionPesterTest File" name="Export-Function.Creates the New-FunctionPesterTest File" time="0.0631" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Sets Content of the New-FunctionPesterTest File" name="Export-Function.Sets Content of the New-FunctionPesterTest File" time="0.0599" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mocked Out-Null" name="Export-Function.Mocked Out-Null" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mocked Write-Verbose" name="Export-Function.Mocked Write-Verbose" time="0.0716" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mocked everything correctly" name="Export-Function.Mocked everything correctly" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Export-Function Tests" executed="True" result="Success" success="True" time="1.5764" asserts="0" description="Export-Function Tests">
        <results>
          <test-case description="Has a Parameter called Function" name="Export-Function Tests.Has a Parameter called Function" time="0.1339" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter is Identified as Mandatory being True True" name="Export-Function Tests.Function Parameter is Identified as Mandatory being True True" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter is of String Type" name="Export-Function Tests.Function Parameter is of String Type" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter is member of ParameterSets" name="Export-Function Tests.Function Parameter is member of ParameterSets" time="0.0335" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter Position is defined correctly" name="Export-Function Tests.Function Parameter Position is defined correctly" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Function Parameter Accept Pipeline Input?" name="Export-Function Tests.Does Function Parameter Accept Pipeline Input?" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Function Parameter Accept Pipeline Input by PropertyName?" name="Export-Function Tests.Does Function Parameter Accept Pipeline Input by PropertyName?" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Function Parameter use advanced parameter Validation? " name="Export-Function Tests.Does Function Parameter use advanced parameter Validation? " time="0.036" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for Function " name="Export-Function Tests.Has Parameter Help Text for Function " time="0.0319" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called ResolvedFunction" name="Export-Function Tests.Has a Parameter called ResolvedFunction" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter is Identified as Mandatory being True" name="Export-Function Tests.ResolvedFunction Parameter is Identified as Mandatory being True" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter is of Object Type" name="Export-Function Tests.ResolvedFunction Parameter is of Object Type" time="0.0428" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter is member of ParameterSets" name="Export-Function Tests.ResolvedFunction Parameter is member of ParameterSets" time="0.0225" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter Position is defined correctly" name="Export-Function Tests.ResolvedFunction Parameter Position is defined correctly" time="0.0263" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ResolvedFunction Parameter Accept Pipeline Input?" name="Export-Function Tests.Does ResolvedFunction Parameter Accept Pipeline Input?" time="0.0429" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ResolvedFunction Parameter Accept Pipeline Input by PropertyName?" name="Export-Function Tests.Does ResolvedFunction Parameter Accept Pipeline Input by PropertyName?" time="0.0367" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ResolvedFunction Parameter use advanced parameter Validation? " name="Export-Function Tests.Does ResolvedFunction Parameter use advanced parameter Validation? " time="0.038" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for ResolvedFunction " name="Export-Function Tests.Has Parameter Help Text for ResolvedFunction " time="0.0364" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called OutPath" name="Export-Function Tests.Has a Parameter called OutPath" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is Identified as Mandatory being True True" name="Export-Function Tests.OutPath Parameter is Identified as Mandatory being True True" time="0.04" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is of String Type" name="Export-Function Tests.OutPath Parameter is of String Type" time="0.0332" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is member of ParameterSets" name="Export-Function Tests.OutPath Parameter is member of ParameterSets" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter Position is defined correctly" name="Export-Function Tests.OutPath Parameter Position is defined correctly" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input?" name="Export-Function Tests.Does OutPath Parameter Accept Pipeline Input?" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input by PropertyName?" name="Export-Function Tests.Does OutPath Parameter Accept Pipeline Input by PropertyName?" time="0.0306" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter use advanced parameter Validation? " name="Export-Function Tests.Does OutPath Parameter use advanced parameter Validation? " time="0.0501" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for OutPath " name="Export-Function Tests.Has Parameter Help Text for OutPath " time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called PrivateFunction" name="Export-Function Tests.Has a Parameter called PrivateFunction" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter is Identified as Mandatory being False" name="Export-Function Tests.PrivateFunction Parameter is Identified as Mandatory being False" time="0.0461" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter is of SwitchParameter Type" name="Export-Function Tests.PrivateFunction Parameter is of SwitchParameter Type" time="0.0338" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter is member of ParameterSets" name="Export-Function Tests.PrivateFunction Parameter is member of ParameterSets" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter Position is defined correctly" name="Export-Function Tests.PrivateFunction Parameter Position is defined correctly" time="0.0324" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does PrivateFunction Parameter Accept Pipeline Input?" name="Export-Function Tests.Does PrivateFunction Parameter Accept Pipeline Input?" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does PrivateFunction Parameter Accept Pipeline Input by PropertyName?" name="Export-Function Tests.Does PrivateFunction Parameter Accept Pipeline Input by PropertyName?" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does PrivateFunction Parameter use advanced parameter Validation? " name="Export-Function Tests.Does PrivateFunction Parameter use advanced parameter Validation? " time="0.0438" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for PrivateFunction " name="Export-Function Tests.Has Parameter Help Text for PrivateFunction " time="0.0309" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-Function Has show-help comment block" name="Export-Function Tests.Function Export-Function Has show-help comment block" time="0.0756" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-Function Has show-help comment block has a.SYNOPSIS" name="Export-Function Tests.Function Export-Function Has show-help comment block has a.SYNOPSIS" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-Function Has show-help comment block has an example" name="Export-Function Tests.Function Export-Function Has show-help comment block has an example" time="0.0382" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Export-Function Is an advanced function" name="Export-Function Tests.Function Export-Function Is an advanced function" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing Public Function  - New-FunctionFile for Standard Processing" executed="True" result="Success" success="True" time="3.5451" asserts="0" description="Testing Public Function  - New-FunctionFile for Standard Processing">
        <results>
          <test-case description="Is valid Powershell (Has no script errors)" name="Testing Public Function  - New-FunctionFile for Standard Processing.Is valid Powershell (Has no script errors)" time="0.0738" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0576" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0488" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.7951" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0519" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0432" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0523" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0529" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.047" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0545" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0446" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0506" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.7967" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0487" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.042" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0528" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing Public Function  - New-FunctionFile for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0532" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-FunctionFile Tests" executed="True" result="Success" success="True" time="0.6084" asserts="0" description="New-FunctionFile Tests">
        <results>
          <test-case description="Has a Parameter called FunctionName" name="New-FunctionFile Tests.Has a Parameter called FunctionName" time="0.1163" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="FunctionName Parameter is Identified as Mandatory being False" name="New-FunctionFile Tests.FunctionName Parameter is Identified as Mandatory being False" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="FunctionName Parameter is of Object Type" name="New-FunctionFile Tests.FunctionName Parameter is of Object Type" time="0.04" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="FunctionName Parameter is member of ParameterSets" name="New-FunctionFile Tests.FunctionName Parameter is member of ParameterSets" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="FunctionName Parameter Position is defined correctly" name="New-FunctionFile Tests.FunctionName Parameter Position is defined correctly" time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does FunctionName Parameter Accept Pipeline Input?" name="New-FunctionFile Tests.Does FunctionName Parameter Accept Pipeline Input?" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does FunctionName Parameter Accept Pipeline Input by PropertyName?" name="New-FunctionFile Tests.Does FunctionName Parameter Accept Pipeline Input by PropertyName?" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does FunctionName Parameter use advanced parameter Validation? " name="New-FunctionFile Tests.Does FunctionName Parameter use advanced parameter Validation? " time="0.0453" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for FunctionName " name="New-FunctionFile Tests.Has Parameter Help Text for FunctionName " time="0.0311" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionFile Has show-help comment block" name="New-FunctionFile Tests.Function New-FunctionFile Has show-help comment block" time="0.0862" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionFile Has show-help comment block has a.SYNOPSIS" name="New-FunctionFile Tests.Function New-FunctionFile Has show-help comment block has a.SYNOPSIS" time="0.0297" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionFile Has show-help comment block has an example" name="New-FunctionFile Tests.Function New-FunctionFile Has show-help comment block has an example" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionFile Is an advanced function" name="New-FunctionFile Tests.Function New-FunctionFile Is an advanced function" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing" executed="True" result="Success" success="True" time="3.8589" asserts="0" description="Testing Public Function  - New-FunctionPesterTest for Standard Processing">
        <results>
          <test-case description="Is valid Powershell (Has no script errors)" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.Is valid Powershell (Has no script errors)" time="0.0832" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0665" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0575" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0553" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0539" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.054" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.0564" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="0.8027" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.0656" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0577" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0494" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0566" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0556" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0603" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0544" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0554" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0502" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0617" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.0518" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0551" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0511" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0581" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.051" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0606" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0529" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0517" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0571" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="0.8091" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" time="0.0522" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0549" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0554" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0615" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0597" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0523" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0536" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0576" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0554" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0545" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0512" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing Public Function  - New-FunctionPesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0551" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-FunctionPesterTest" executed="True" result="Success" success="True" time="0.3913" asserts="0" description="New-FunctionPesterTest">
        <results>
          <test-case description="Passes the Functional Mock" name="New-FunctionPesterTest.Passes the Functional Mock" time="0.106" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Creates the required Objects" name="New-FunctionPesterTest.Creates the required Objects" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Creates the Export-Function Pester Test File" name="New-FunctionPesterTest.Creates the Export-Function Pester Test File" time="0.055" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Sets Content of the Export-Function Pester Test File" name="New-FunctionPesterTest.Sets Content of the Export-Function Pester Test File" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mocked Out-Null" name="New-FunctionPesterTest.Mocked Out-Null" time="0.045" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mocked Write-Verbose" name="New-FunctionPesterTest.Mocked Write-Verbose" time="0.0465" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Mocked everything correctly" name="New-FunctionPesterTest.Mocked everything correctly" time="0.0395" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-FunctionPesterTest Tests" executed="True" result="Success" success="True" time="1.6011" asserts="0" description="New-FunctionPesterTest Tests">
        <results>
          <test-case description="Has a Parameter called Function" name="New-FunctionPesterTest Tests.Has a Parameter called Function" time="0.1007" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter is Identified as Mandatory being True True" name="New-FunctionPesterTest Tests.Function Parameter is Identified as Mandatory being True True" time="0.0348" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter is of String Type" name="New-FunctionPesterTest Tests.Function Parameter is of String Type" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter is member of ParameterSets" name="New-FunctionPesterTest Tests.Function Parameter is member of ParameterSets" time="0.0443" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function Parameter Position is defined correctly" name="New-FunctionPesterTest Tests.Function Parameter Position is defined correctly" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Function Parameter Accept Pipeline Input?" name="New-FunctionPesterTest Tests.Does Function Parameter Accept Pipeline Input?" time="0.03" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Function Parameter Accept Pipeline Input by PropertyName?" name="New-FunctionPesterTest Tests.Does Function Parameter Accept Pipeline Input by PropertyName?" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does Function Parameter use advanced parameter Validation? " name="New-FunctionPesterTest Tests.Does Function Parameter use advanced parameter Validation? " time="0.0466" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for Function " name="New-FunctionPesterTest Tests.Has Parameter Help Text for Function " time="0.0312" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called ResolvedFunction" name="New-FunctionPesterTest Tests.Has a Parameter called ResolvedFunction" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter is Identified as Mandatory being True" name="New-FunctionPesterTest Tests.ResolvedFunction Parameter is Identified as Mandatory being True" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter is of Object Type" name="New-FunctionPesterTest Tests.ResolvedFunction Parameter is of Object Type" time="0.0288" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter is member of ParameterSets" name="New-FunctionPesterTest Tests.ResolvedFunction Parameter is member of ParameterSets" time="0.0326" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ResolvedFunction Parameter Position is defined correctly" name="New-FunctionPesterTest Tests.ResolvedFunction Parameter Position is defined correctly" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ResolvedFunction Parameter Accept Pipeline Input?" name="New-FunctionPesterTest Tests.Does ResolvedFunction Parameter Accept Pipeline Input?" time="0.0439" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ResolvedFunction Parameter Accept Pipeline Input by PropertyName?" name="New-FunctionPesterTest Tests.Does ResolvedFunction Parameter Accept Pipeline Input by PropertyName?" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ResolvedFunction Parameter use advanced parameter Validation? " name="New-FunctionPesterTest Tests.Does ResolvedFunction Parameter use advanced parameter Validation? " time="0.0522" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for ResolvedFunction " name="New-FunctionPesterTest Tests.Has Parameter Help Text for ResolvedFunction " time="0.0329" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called OutPath" name="New-FunctionPesterTest Tests.Has a Parameter called OutPath" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is Identified as Mandatory being True True" name="New-FunctionPesterTest Tests.OutPath Parameter is Identified as Mandatory being True True" time="0.0351" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is of String Type" name="New-FunctionPesterTest Tests.OutPath Parameter is of String Type" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is member of ParameterSets" name="New-FunctionPesterTest Tests.OutPath Parameter is member of ParameterSets" time="0.0305" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter Position is defined correctly" name="New-FunctionPesterTest Tests.OutPath Parameter Position is defined correctly" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input?" name="New-FunctionPesterTest Tests.Does OutPath Parameter Accept Pipeline Input?" time="0.0434" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input by PropertyName?" name="New-FunctionPesterTest Tests.Does OutPath Parameter Accept Pipeline Input by PropertyName?" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter use advanced parameter Validation? " name="New-FunctionPesterTest Tests.Does OutPath Parameter use advanced parameter Validation? " time="0.0412" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for OutPath " name="New-FunctionPesterTest Tests.Has Parameter Help Text for OutPath " time="0.0328" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called PrivateFunction" name="New-FunctionPesterTest Tests.Has a Parameter called PrivateFunction" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter is Identified as Mandatory being False" name="New-FunctionPesterTest Tests.PrivateFunction Parameter is Identified as Mandatory being False" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter is of SwitchParameter Type" name="New-FunctionPesterTest Tests.PrivateFunction Parameter is of SwitchParameter Type" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter is member of ParameterSets" name="New-FunctionPesterTest Tests.PrivateFunction Parameter is member of ParameterSets" time="0.0325" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="PrivateFunction Parameter Position is defined correctly" name="New-FunctionPesterTest Tests.PrivateFunction Parameter Position is defined correctly" time="0.0422" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does PrivateFunction Parameter Accept Pipeline Input?" name="New-FunctionPesterTest Tests.Does PrivateFunction Parameter Accept Pipeline Input?" time="0.032" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does PrivateFunction Parameter Accept Pipeline Input by PropertyName?" name="New-FunctionPesterTest Tests.Does PrivateFunction Parameter Accept Pipeline Input by PropertyName?" time="0.049" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does PrivateFunction Parameter use advanced parameter Validation? " name="New-FunctionPesterTest Tests.Does PrivateFunction Parameter use advanced parameter Validation? " time="0.0387" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for PrivateFunction " name="New-FunctionPesterTest Tests.Has Parameter Help Text for PrivateFunction " time="0.033" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionPesterTest Has show-help comment block" name="New-FunctionPesterTest Tests.Function New-FunctionPesterTest Has show-help comment block" time="0.079" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionPesterTest Has show-help comment block has a.SYNOPSIS" name="New-FunctionPesterTest Tests.Function New-FunctionPesterTest Has show-help comment block has a.SYNOPSIS" time="0.0381" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionPesterTest Has show-help comment block has an example" name="New-FunctionPesterTest Tests.Function New-FunctionPesterTest Has show-help comment block has an example" time="0.0346" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-FunctionPesterTest Is an advanced function" name="New-FunctionPesterTest Tests.Function New-FunctionPesterTest Is an advanced function" time="0.0371" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="Testing Public Function  - New-ModulePesterTest for Standard Processing" executed="True" result="Success" success="True" time="6.1129" asserts="0" description="Testing Public Function  - New-ModulePesterTest for Standard Processing">
        <results>
          <test-case description="Is valid Powershell (Has no script errors)" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.Is valid Powershell (Has no script errors)" time="0.0871" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingCmdletAliases" time="0.0534" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueSwitchParameter" time="0.0473" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingEmptyCatchBlock" time="0.0451" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidGlobalVars" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidInvokingEmptyMembers" time="0.0489" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidNullOrEmptyHelpMessageAttribute" time="0.057" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPositionalParameters" time="2.0554" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedCmdletChar" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedCmdletChar" time="0.049" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSReservedParams" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSReservedParams" time="0.0479" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidShouldContinueWithoutForce" time="0.0481" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingDeprecatedManifestFields" time="0.0555" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidDefaultValueForMandatoryParameter" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingUserNameAndPassWordParams" time="0.0501" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingComputerNameHardcoded" time="0.0448" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingConvertToSecureStringWithPlainText" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingInvokeExpression" time="0.0593" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingPlainTextForPassword" time="0.0424" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWMICmdlet" time="0.0505" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSAvoidUsingWriteHost" time="0.056" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMisleadingBacktick" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSMisleadingBacktick" time="0.0413" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseBOMForUnicodeEncodedFile" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseToExportFieldsInManifest" time="0.0514" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseOutputTypeCorrectly" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSMissingModuleManifestField" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSPossibleIncorrectComparisonWithNull" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSProvideCommentHelp" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSProvideCommentHelp" time="0.0415" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseApprovedVerbs" time="0.0593" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseCmdletCorrectly" time="2.0724" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseDeclaredVarsMoreThanAssigments" time="0.0573" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUsePSCredentialType" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUsePSCredentialType" time="0.0507" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSShouldProcess" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSShouldProcess" time="0.0419" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseShouldProcessForStateChangingFunctions" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseSingularNouns" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseSingularNouns" time="0.0453" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSUseUTF8EncodingForHelpFile" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscTestsPresent" time="0.0495" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCDscExamplesPresent" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseVerboseMessageInDSCResource" time="0.0499" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalMandatoryParametersForDSC" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCUseIdenticalParametersForDSC" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCStandardDSCFunctionsInResource" time="0.0519" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" name="Testing Public Function  - New-ModulePesterTest for Standard Processing.passes the PSScriptAnalyzer Rule PSDSCReturnCorrectTypesForDSCFunctions" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="New-ModulePesterTest Tests" executed="True" result="Success" success="True" time="0.921" asserts="0" description="New-ModulePesterTest Tests">
        <results>
          <test-case description="Has a Parameter called ModuleName" name="New-ModulePesterTest Tests.Has a Parameter called ModuleName" time="0.0849" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ModuleName Parameter is Identified as Mandatory being False" name="New-ModulePesterTest Tests.ModuleName Parameter is Identified as Mandatory being False" time="0.0378" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ModuleName Parameter is of String Type" name="New-ModulePesterTest Tests.ModuleName Parameter is of String Type" time="0.0414" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ModuleName Parameter is member of ParameterSets" name="New-ModulePesterTest Tests.ModuleName Parameter is member of ParameterSets" time="0.0292" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="ModuleName Parameter Position is defined correctly" name="New-ModulePesterTest Tests.ModuleName Parameter Position is defined correctly" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ModuleName Parameter Accept Pipeline Input?" name="New-ModulePesterTest Tests.Does ModuleName Parameter Accept Pipeline Input?" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ModuleName Parameter Accept Pipeline Input by PropertyName?" name="New-ModulePesterTest Tests.Does ModuleName Parameter Accept Pipeline Input by PropertyName?" time="0.03" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does ModuleName Parameter use advanced parameter Validation? " name="New-ModulePesterTest Tests.Does ModuleName Parameter use advanced parameter Validation? " time="0.0461" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for ModuleName " name="New-ModulePesterTest Tests.Has Parameter Help Text for ModuleName " time="0.0291" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has a Parameter called OutPath" name="New-ModulePesterTest Tests.Has a Parameter called OutPath" time="0.0352" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is Identified as Mandatory being False" name="New-ModulePesterTest Tests.OutPath Parameter is Identified as Mandatory being False" time="0.046" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is of String Type" name="New-ModulePesterTest Tests.OutPath Parameter is of String Type" time="0.0321" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter is member of ParameterSets" name="New-ModulePesterTest Tests.OutPath Parameter is member of ParameterSets" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="OutPath Parameter Position is defined correctly" name="New-ModulePesterTest Tests.OutPath Parameter Position is defined correctly" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input?" name="New-ModulePesterTest Tests.Does OutPath Parameter Accept Pipeline Input?" time="0.0294" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter Accept Pipeline Input by PropertyName?" name="New-ModulePesterTest Tests.Does OutPath Parameter Accept Pipeline Input by PropertyName?" time="0.0433" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Does OutPath Parameter use advanced parameter Validation? " name="New-ModulePesterTest Tests.Does OutPath Parameter use advanced parameter Validation? " time="0.0472" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Has Parameter Help Text for OutPath " name="New-ModulePesterTest Tests.Has Parameter Help Text for OutPath " time="0.0312" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-ModulePesterTest Has show-help comment block" name="New-ModulePesterTest Tests.Function New-ModulePesterTest Has show-help comment block" time="0.0823" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-ModulePesterTest Has show-help comment block has a.SYNOPSIS" name="New-ModulePesterTest Tests.Function New-ModulePesterTest Has show-help comment block has a.SYNOPSIS" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-ModulePesterTest Has show-help comment block has an example" name="New-ModulePesterTest Tests.Function New-ModulePesterTest Has show-help comment block has an example" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
          <test-case description="Function New-ModulePesterTest Is an advanced function" name="New-ModulePesterTest Tests.Function New-ModulePesterTest Is an advanced function" time="0.0353" asserts="0" success="True" result="Success" executed="True" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>